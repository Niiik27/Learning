print("Домашняя работа №2")
print("")
print("Задание №1 - наити сумму и произведение трех чисел")
input_string = input("Введите три цифры ")
operation = input("Что бы перемножить введите \"*\", что бы сложить введите \"+\" ")
"""
Правильнее было бы использовать три инпута для ввода трех чисел,
но интереснее повторить задачу с разделением числа на состовляющие его цифры
"""


right = int(input_string) # Так назвал переменную, что бы обеспечить однотипность обработки. right - то что осталось после отделения цифры слева

order = len(input_string)-1 #Нужно знать сколько введено цифр, что бы использовать это для отделения старшей цифры
left = right//(10**order)#Здесь потребуется оператор степени, что бы задать нужное количество нулей после единицы
right = right%(10**order)# Число преобразует само себя. Это позволит без модификации повторять код столько раз, сколько потребуется
result = left
# print('left', left)
# print('right', right)

"""Вот повторяемый блок кода"""
order = order-1
left = right//(10**order)#Текущая рабочая цифра - требуется ее перемножить или сложить с остальными цифрами
right = right%(10**order)#Текущий набор цифр


if operation=="*":
    result = result * left
elif operation=="+":
    result = result + left
else:
    pass


# print('left', left)
# print('right', right)

order = order-1
left = right//(10**order)
right = right%(10**order)

if operation=="*":
    result = result * left
elif operation=="+":
    result = result + left
else:
    pass
print("")
# print('left', left)
# print('right', right)

print(f"Результат {result}")
print("")

"""
**********************************************************************************************************************************
**********************************************************************************************************************************
Небольшая модификация под числа большей разрядности(но одинаковые по разряду)
**********************************************************************************************************************************
**********************************************************************************************************************************
"""
print("")
print("Модификация")
input_string = input("Введите три числа ")
input_len_num = int(input("Сколькизначные числа? "))
operation = input("Что бы перемножить введите \"*\", что бы сложить введите \"+\" ")

right = int(input_string) # Так назвал переменную, что бы обеспечить однотипность обработки. right - то что осталось после отделения цифры слева

order = len(input_string)-input_len_num #Нужно знать сколько введено цифр, что бы использовать это для отделения старшей цифры
left = right//(10**order)#Здесь потребуется оператор степени, что бы задать нужное количество нулей после единицы
right = right%(10**order)# Число преобразует само себя. Это позволит без модификации повторять код столько раз, сколько потребуется
result = left
# print('left', left)
# print('right', right)

"""Вот повторяемый блок кода"""
order = order-input_len_num
left = right//(10**order)#Текущая рабочая цифра - требуется ее перемножить или сложить с остальными цифрами
right = right%(10**order)#Текущий набор цифр


if operation=="*":
    result = result * left
elif operation=="+":
    result = result + left
else:
    pass


# print('left', left)
# print('right', right)

order = order-input_len_num
left = right//(10**order)
right = right%(10**order)

if operation=="*":
    result = result * left
elif operation=="+":
    result = result + left
else:
    pass
print("")
# print('left', left)
# print('right', right)

print(f"Результат {result}")
print("")

"""
**********************************************************************************************************************************
**********************************************************************************************************************************
Еще небольшая модификация под числа большей разрядности(но одинаковые по разряду) с автоопределением разрядности
Оказалось сложнее чем казалось по этому много коментариев, много дежурных принтов. Может быть пояснение кода прояснит предыдущие решения
**********************************************************************************************************************************
**********************************************************************************************************************************
"""
print("")
print("Модификация 2")
input_string = input("Введите числа ")
if len(input_string)<3:
    print("Нехватает цифр!")
remains = int(len(input_string)%3)#Если количество не кратное трем, то у нас будет число которое не будет участвовать в расчете, по этому мы считаем, что в веденном числе
# Упущенные циры равны нулю для сложения и еденице для умножения
add_num=3-remains #По скольку я хочу что бы отсутствующие цифры не уничтожали умножение и не влияли на сложение -
# мне нужно знать сколько чисел требуется добавить - количество соответствует кратность - остаток. В зависимости от операции эти числс будут равны или нулю или единице
if add_num==3: add_num=0#При нормальном количестве цифр деление по остатку даст ноль, по этому нужно отменить тройку

input_len_num = int(len(input_string)//3)  #Это количество знаков в одном числе. почему то иногда флоат случался. по этому приведение к инту.
print("remains ",remains)
print("add_num ",add_num)
print("input_len_num ",input_len_num)
operation = input("Что бы перемножить введите \"*\", что бы сложить введите \"+\" ")
if add_num != 0:
    input_len_num = input_len_num + 1#Понятно, что если есть остаток, то нужно увеличить разрядность числа
    if operation=="*":
        input_string = input_string + "0"
        add_num=add_num-1
        if add_num!=0:
            input_string = input_string + f"{int(len(input_string)<6)}"#Хочу чтобы отсутствующие числа не влияли на присутствующие. если нехватает части числа то дополнится нулем,
            #если нехватает числа целиком - то оно должно равняться еденице
    elif operation=="+":
        input_string = input_string + "0"
        add_num=add_num-1
        if add_num!=0:
            input_string = input_string + "0"
    else:
        pass
    print("Восстановленное число ",input_string)
else:
    pass


right = int(input_string)# С прицелом на циклическую обработку - имя переменной означает взятую цифру справа, а пока все введенное число - правое



order = len(input_string)-input_len_num
left = right//(10**order)
right = right%(10**order)
result = left
# print('left', left)
# print('right', right)

"""Вот повторяемый блок кода"""
order = order-input_len_num
left = right//(10**order)#Текущая рабочая цифра - требуется ее перемножить или сложить с остальными цифрами
right = right%(10**order)#Текущий набор цифр


if operation=="*":
    result = result * left
elif operation=="+":
    result = result + left
else:
    pass


# print('left', left)
# print('right', right)

order = order-input_len_num
left = right//(10**order)
right = right%(10**order)

if operation=="*":
    result = result * left
elif operation=="+":
    result = result + left
else:
    pass
print("")
# print('left', left)
# print('right', right)

print(f"Результат {result}")

"""
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
"""


print("")
print("Задание №2 - максимум, минимум или среднее из трех чисел")
first = int(input("Первое число "))
second = int(input("Второе число "))
third = int(input("Третье число "))
operation = input("max or min or average ")
"""
С разделением числа наигрался, по этому теперь будет просто ввод чисел
"""
if operation == "average":
    result = (first+second+third)/3
    print(f"Среднее арефметическое равно {result}")
elif operation == "max":
    maximum = first
    if maximum < second: maximum = second
    if maximum < third: maximum = third
    print(f"Максимум равен {maximum}")
elif operation == "min":
    minimum = first
    if minimum > second: minimum = second
    if minimum > third: minimum = third
    print(f"Минимум равен {minimum}")
else:
    print("Ошибка в выбранном действии")


"""
**********************************************************************************************************************************
**********************************************************************************************************************************
В процессе написания - названия переменных совпадали с операторами, и вылазили подсказки. По этому решил из опробовать
**********************************************************************************************************************************
**********************************************************************************************************************************
"""
print("")
print("Задание №2 (с операторами max min) - максимум, минимум или среднее из трех чисел")
first = int(input("Первое число "))
second = int(input("Второе число "))
third = int(input("Третье число "))
operation = input("max or min or average ")
if operation == "average":
    result = (first+second+third)/3
    print(f"Среднее арефметическое равно {result}")
elif operation == "max":
    maximum = max(first,second,third)
    print(f"Максимум равен {maximum}")
elif operation == "min":
    minimum = min(first,second,third)
    print(f"Минимум равен {minimum}")
else:
    print("Ошибка в выбранном действии")

"""
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
**********************************************************************************************************************************
"""

print("")
print("Задание №3 - перевести метры в мили, дюймы, ярды")
meters = float(input("Введите метры "))
convert = input("Введите m - для перевода в мили, i - в дюймы, y - ярды, f - в футы ")
if convert == 'm':
    result = meters/1609.344
elif convert == 'i':
    result = meters/2.54*100
elif convert == 'y':
    result = meters/0.9144
elif convert == 'f':
    result = meters/0.3048
else:
    print(f"Ошибка в выборе единицы измерения")
print(f"Результат {result}")